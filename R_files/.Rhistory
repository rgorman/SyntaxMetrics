2*2
install.packages(c("XML", "textreuse"))
p <- 29.46
i <- 24.57
r <- 250
r - (p+1)
250-54.03
195.97 + 25.23
62*31
172/15
30+420
372+72
315+121
172+220+50
a <- 15
b <- 16
c <- 15
d <- 15
a * 12
a * 15
b * 20
b * 8
c * 25
c * 5
d * 2
d * 28
16*15
15*17
15*19
seq(1:150)
f <- seq(1:150)
length(f)
b * 20
mast <- 15*17
march <- 15*2
seq(301, 546)
length(seq(301, 546))
a * 12
a <- 15
b <- 16
c <- 15
d <- 15
a * 12
card <-  seq(1101, 1172)
card <-  seq(1001, 1172)
length(card)
card <-  seq(2001, 2219)
length(card)
54.03-250
195.97+31.43
7/16
14/16
12/16
10/16
5/16
9/16
19/23
20/22
19/21
12/19
15/19
20/21
18/21
17/19
18/22
21/23
18/22
15/17
17/21
18/22
14/15
11/14
12/14
13/15
10/14
20/23
11/14
12/15
14/15
12/14
11/14
11/14
17/23
10/14
19*60
17*60
60*9
1.309 * 200
3*1.5
p <- 32.1
i <- 21.93
p + i
250- (p+i)
195.97 + p
setwd("~/syntacto_stylistics/R_files")
require(igraph)
require(XML)
require(arcdiagram)
doc.object <- xmlTreeParse(file = "../graph_theory/Cat-1B.xml")
top <- xmlRoot(doc.object)
top[[1]]
s <- 1
a <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "id"))
# extract all @head attributes from <word> elementes in indexed sentence of "top"
b <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "head"))
c <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "form"))
a <- as.numeric(a)
b <- as.numeric(b)
edge.matrix <- matrix(a, ncol=1)
edge.matrix <- cbind(edge.matrix, b)
arcplot(edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
index <- which(edge.matrix[, 2] > 0)
short.edge.matrix <- edge.matrix[index, ]
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
s <- 2
a <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "id"))
# extract all @head attributes from <word> elementes in indexed sentence of "top"
b <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "head"))
a <- as.numeric(a)
b <- as.numeric(b)
edge.matrix <- matrix(a, ncol=1)
# add elements of "b" as second column
edge.matrix <- cbind(edge.matrix, b)
index <- which(edge.matrix[, 2] > 0)
# Use "index" to create new matrix.
short.edge.matrix <- edge.matrix[index, ]
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
s <- 3
a <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "id"))
# extract all @head attributes from <word> elementes in indexed sentence of "top"
b <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "head"))
c <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "form"))
a <- as.numeric(a)
b <- as.numeric(b)
edge.matrix <- matrix(a, ncol=1)
# add elements of "b" as second column
edge.matrix <- cbind(edge.matrix, b)
index <- which(edge.matrix[, 2] > 0)
short.edge.matrix <- edge.matrix[index, ]
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
s <- 5
a <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "id"))
# extract all @head attributes from <word> elementes in indexed sentence of "top"
b <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "head"))
c <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "form"))
a <- as.numeric(a)
b <- as.numeric(b)
edge.matrix <- matrix(a, ncol=1)
# add elements of "b" as second column
edge.matrix <- cbind(edge.matrix, b)
index <- which(edge.matrix[, 2] > 0)
# Use "index" to create new matrix.
short.edge.matrix <- edge.matrix[index, ]
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
s <- 11
a <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "id"))
# extract all @head attributes from <word> elementes in indexed sentence of "top"
b <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "head"))
c <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "form"))
# convert vectors from character to numeric
a <- as.numeric(a)
b <- as.numeric(b)
edge.matrix <- matrix(a, ncol=1)
# add elements of "b" as second column
edge.matrix <- cbind(edge.matrix, b)
index <- which(edge.matrix[, 2] > 0)
# Use "index" to create new matrix.
short.edge.matrix <- edge.matrix[index, ]
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
s <- 13
# extract all @id attrubutes from <word> elements in indexed sentence of "top"
a <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "id"))
# extract all @head attributes from <word> elementes in indexed sentence of "top"
b <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "head"))
c <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "form"))
# convert vectors from character to numeric
a <- as.numeric(a)
b <- as.numeric(b)
# create and edge matrix from the @id ("a") and @head vectors ("b")
# first create matrix with one column (ncol = 1) and a row for each element in "a"
edge.matrix <- matrix(a, ncol=1)
# add elements of "b" as second column
edge.matrix <- cbind(edge.matrix, b)
# delete all rows of "edge.maatrix" where @head = 0. This step eliminates all punctuation from consideration.
# Likewise, the root element of the sentence is linked only with these tokens dependent on in, not with a theoretical "root".
# First, create "index" containing row numbers of all rows with @head greater than 0.
index <- which(edge.matrix[, 2] > 0)
# Use "index" to create new matrix.
short.edge.matrix <- edge.matrix[index, ]
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
s <- 14
# extract all @id attrubutes from <word> elements in indexed sentence of "top"
a <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "id"))
# extract all @head attributes from <word> elementes in indexed sentence of "top"
b <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "head"))
c <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "form"))
# convert vectors from character to numeric
a <- as.numeric(a)
b <- as.numeric(b)
# create and edge matrix from the @id ("a") and @head vectors ("b")
# first create matrix with one column (ncol = 1) and a row for each element in "a"
edge.matrix <- matrix(a, ncol=1)
# add elements of "b" as second column
edge.matrix <- cbind(edge.matrix, b)
index <- which(edge.matrix[, 2] > 0)
# Use "index" to create new matrix.
short.edge.matrix <- edge.matrix[index, ]
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
s <- 15
# extract all @id attrubutes from <word> elements in indexed sentence of "top"
a <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "id"))
# extract all @head attributes from <word> elementes in indexed sentence of "top"
b <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "head"))
c <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "form"))
# convert vectors from character to numeric
a <- as.numeric(a)
b <- as.numeric(b)
# create and edge matrix from the @id ("a") and @head vectors ("b")
# first create matrix with one column (ncol = 1) and a row for each element in "a"
edge.matrix <- matrix(a, ncol=1)
# add elements of "b" as second column
edge.matrix <- cbind(edge.matrix, b)
# delete all rows of "edge.maatrix" where @head = 0. This step eliminates all punctuation from consideration.
# Likewise, the root element of the sentence is linked only with these tokens dependent on in, not with a theoretical "root".
# First, create "index" containing row numbers of all rows with @head greater than 0.
index <- which(edge.matrix[, 2] > 0)
# Use "index" to create new matrix.
short.edge.matrix <- edge.matrix[index, ]
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
s <- 16
# extract all @id attrubutes from <word> elements in indexed sentence of "top"
a <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "id"))
# extract all @head attributes from <word> elementes in indexed sentence of "top"
b <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "head"))
c <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "form"))
# convert vectors from character to numeric
a <- as.numeric(a)
b <- as.numeric(b)
# create and edge matrix from the @id ("a") and @head vectors ("b")
# first create matrix with one column (ncol = 1) and a row for each element in "a"
edge.matrix <- matrix(a, ncol=1)
# add elements of "b" as second column
edge.matrix <- cbind(edge.matrix, b)
# delete all rows of "edge.maatrix" where @head = 0. This step eliminates all punctuation from consideration.
# Likewise, the root element of the sentence is linked only with these tokens dependent on in, not with a theoretical "root".
# First, create "index" containing row numbers of all rows with @head greater than 0.
index <- which(edge.matrix[, 2] > 0)
# Use "index" to create new matrix.
short.edge.matrix <- edge.matrix[index, ]
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
s <- 3
# extract all @id attrubutes from <word> elements in indexed sentence of "top"
a <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "id"))
# extract all @head attributes from <word> elementes in indexed sentence of "top"
b <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "head"))
c <- xmlSApply(top[[s]], function(x) xmlGetAttr(x, "form"))
# convert vectors from character to numeric
a <- as.numeric(a)
b <- as.numeric(b)
# create and edge matrix from the @id ("a") and @head vectors ("b")
# first create matrix with one column (ncol = 1) and a row for each element in "a"
edge.matrix <- matrix(a, ncol=1)
# add elements of "b" as second column
edge.matrix <- cbind(edge.matrix, b)
# delete all rows of "edge.maatrix" where @head = 0. This step eliminates all punctuation from consideration.
# Likewise, the root element of the sentence is linked only with these tokens dependent on in, not with a theoretical "root".
# First, create "index" containing row numbers of all rows with @head greater than 0.
index <- which(edge.matrix[, 2] > 0)
# Use "index" to create new matrix.
short.edge.matrix <- edge.matrix[index, ]
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5 )
top[[s]]
View(short.edge.matrix)
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5, labels = c )
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5, col.arcs = "red" )
arcplot(short.edge.matrix, las = 1, sorted = TRUE, lwd.arcs = 5, col.arcs = "black" )
